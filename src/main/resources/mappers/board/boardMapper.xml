<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.board.mapper.BoardMapper">

    <insert id="register" parameterType="board">
        insert into board(title, writer, content, siName, category) values(#{title}, #{writer}, #{content}, #{siName}, #{category})
    </insert>
    
    <!-- 시 목록 가져오기 -->
    <select id="findAllSi" resultType="si">
        select d.doId , d.doName , s.siName 
		from do d left join si s on d.doId = s.doId
		where s.siName is not null;
    </select>
    
    <!-- 일반적인 제목, 작성자, 내용 정렬해서 검색 (orderBy가 null 이면 정확도순, desc나 asc가 있으면 작성일 기준으로 정렬)-->
    <select id="findBoardListByQuery" resultType="board" parameterType="query">
        select b.bId, b.title, b.writer,u.nickName, b.siName, b.regAt, b.modAt, b.hit, b.category, count(c.cId) as commentCnt
        from board b left join boardLike bl on b.bId = bl.bId left join user u on b.writer = u.email left join comment c on b.bId = c.bId
        where 
        b.siName like "%${siName}%" 
        <if test="query != null">
        and b.${field} like "%${query}%"  
        </if>
        <if test='category != null'>
        and category like '%${category}%'
        </if>
        group by b.bId, b.title, b.writer, b.siName, b.regAt, b.modAt, b.hit, b.category
        
        order by regAt ${orderBy}
        
        limit #{start}, #{size}
    </select>
    
    <!-- 해당 쿼리에 맞는 총 게시글 개수 -->
    <select id="findBoardCntByQuery" resultType="int">
        select count(bId)
        from board
        where 
        siName like "%${siName}%" 
        <if test="query != null">
        and ${field} like "%${query}%" 
        </if>
        <if test='category != null'>
        and category like '%${category}%'
        </if>
        
    </select>
    
    <!-- 유저가 작성 한 글 -->
    <select id="findUserWroteList" resultType="board" parameterType="pageableWithEmail">
        select b.*, count(c.cId) as commentCnt, count(bl.bId) as likeCnt from board b left join comment c on b.bId = c.bId left join boardLike bl on b.bId = bl.bId
        where b.writer = #{email} GROUP BY b.bId
        ORDER BY b.bId desc limit #{start},#{size};
    </select>
    
    <select id="findUserWroteListCnt" parameterType="string" resultType="int">
        select count(bId) from board where writer = #{email}
    </select>
    
    <!-- 유저가 좋아요 한 글  -->
    <select id="findUserLikedList" resultType="board" parameterType="pageableWithEmail">
        select b.*, count(bl.bId) as likeCnt, count(c.cId) as commentCnt from boardLike bl left join board b on bl.bId = b.bId left join comment c on b.bId = c.bId
        where bl.email = #{email}
        group by bl.bId
        limit #{start} , #{size}
    </select>
    
    <select id="findUserLikedListCnt" parameterType="string" resultType="int">
        select count(email)
        from boardLike where email = #{email}
    </select>
    
    <!-- 게시판 상단에 인기 게시글 5개 -->
    <select id="findPopularBoardList" resultType="board" parameterType="query">
        select b.bId , b.title, b.writer, u.nickName, b.siName, b.category ,b.regAt, b.modAt,b.hit,  COUNT(bl.bid) as likeCnt
		from board b left join boardLike bl on b.bId = bl.bid left join user u on b.writer = u.email
		where b.siName = #{siName}
		<if test='category != null'>
		and category like "%${category}%"
		</if> 
		GROUP by b.bid
		order by count(bl.bid) desc
		limit 5;
    </select>
    
   <!-- 유저 디테일에 보여질 해당 유저의 게시글 -->
    <select id="findBoardListByUser" resultType="board">
        select b.bId, title, writer, siName ,regAt, modAt,  category, hit, count(bl.bId) as likeCnt
        from board b left join boardLike bl on b.bId = bl.bId
        where writer = #{email} 
        group by b.bId
        order by siName, b.regAt desc
    </select>
    

    <!-- 게시글 한개 조회 -->
    <select id="findBoardDetail" resultType="board">
        select b.*, u.nickName, count(c.cId) as commentCnt
        from board b left join boardLike bl on b.bId = bl.bId left join user u on b.writer = u.email left join comment c on b.bId = c.bId
        where b.bId = #{bId}
        group by b.bId
    </select>
    
    <select id="findNextBId" resultType="long">
	    select min(b2.bId)
		from board b2
		where b2.bId > #{bId} and siName = #{siName} limit 1
    </select>
    
    <select id="findPrevBId" resultType="long">
	    select max(b2.bId)
		from board b2 
		<![CDATA[where b2.bId < #{bId}]]> and siName = #{siName}
    </select>
    
   <!-- 게시글 조회수 올리기 --> 
   <update id="updateBoardHit">
       update board set hit = (hit + 1) where bId = #{bId}
   </update>

   <update id="updateBoard" parameterType="board">
        update board set
        <if test='title != null'>
        title = #{title},
        </if>
        <if test="content != null">
        content = #{content},
        </if>
        <if test="category != null">
        category = #{category},
        </if>
        modAt = now() where bId = #{bId}
   </update>

   <delete id="deleteBoard">
        delete from board where bId = #{bId}
   </delete>

    <delete id="deleteBoardList" parameterType="list">
        delete from board where bId in (
        <foreach collection="list" separator="," item="id">
            #{id}
        </foreach>
        )
    </delete>
   
   <!-- 게시글 좋아요 -->
   <insert id="likeBoard">
        insert into boardLike(bId, email) values(#{bId}, #{email})
   </insert>
   
   <!-- 게시글 좋아요 취소 -->
   <delete id="unlikeBoard" >
        delete from boardLike where bId = #{bId} and email = #{email}
   </delete>

    <select id="findLikeCntByBId" parameterType="long" resultType="int">
        select count(bId) from boardLike where bId = #{bId}
    </select>

    <delete id="unlikeBoardList">
        delete from boardLike where email = #{email} and bId in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>